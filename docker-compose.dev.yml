version: '3.8'

services:
  # Base de données SQL Server pour développement
  database:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: lab_stock_db_dev
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=StrongPassword123!
      - MSSQL_PID=Express
    ports:
      - "1433:1433"
    volumes:
      - db_data_dev:/var/opt/mssql
    networks:
      - lab_stock_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "/opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P StrongPassword123! -Q 'SELECT 1'"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Backend en mode développement avec hot reload
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: lab_stock_backend_dev
    environment:
      - NODE_ENV=development
      - PORT=3001
      - DB_SERVER=database
      - DB_PORT=1433
      - DB_NAME=lab_stock_management
      - DB_USER=sa
      - DB_PASSWORD=StrongPassword123!
      - DB_ENCRYPT=false
      - DB_TRUST_SERVER_CERTIFICATE=true
      - JWT_SECRET=dev_jwt_secret_key
      - JWT_EXPIRES_IN=24h
      - FRONTEND_URL=http://localhost:5173
    ports:
      - "3001:3001"
    depends_on:
      database:
        condition: service_healthy
    networks:
      - lab_stock_network
    restart: unless-stopped
    volumes:
      - ./backend/src:/app/src
      - ./backend/package.json:/app/package.json
      - backend_node_modules:/app/node_modules

  # Frontend en mode développement avec hot reload
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend.dev
    container_name: lab_stock_frontend_dev
    environment:
      - VITE_API_URL=http://localhost:3001/api
    ports:
      - "5173:5173"
    depends_on:
      - backend
    networks:
      - lab_stock_network
    restart: unless-stopped
    volumes:
      - ./src:/app/src
      - ./public:/app/public
      - ./index.html:/app/index.html
      - ./package.json:/app/package.json
      - ./vite.config.ts:/app/vite.config.ts
      - ./tailwind.config.js:/app/tailwind.config.js
      - ./postcss.config.js:/app/postcss.config.js
      - frontend_node_modules:/app/node_modules

volumes:
  db_data_dev:
    driver: local
  backend_node_modules:
    driver: local
  frontend_node_modules:
    driver: local

networks:
  lab_stock_network:
    driver: bridge